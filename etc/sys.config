% vim:ts=2:sw=2:et
[
  {mnesia, [
    {dir, "${APP_ROOT}/var/db"}
  ]},

  {kernel, [
      {logger_level,        notice}
    , {logger, [
      % Print errors only to system_errors log
        {handler, default, logger_std_h, #{ % {handler, HandlerId, Module, Config}
            level          => error
          , config         => #{
              type         => {file, "${APP_ROOT}/log/erl-error.log"}
            , max_no_bytes => 10485760
            , max_no_files => 5
            , file_check   => 5000
          }
          , formatter => {util_log_formatter, #{
              max_size        => 2048
            , depth           => 10
            , single_line     => true
            , time_designator => $\s
            , time_offset     => none
            , time_unit       => millisecond
            , template        => [time," ",
                                  {report, ['LEVEL', " [",modline,":",regpid,"]\n"], [" [",lev,"] "]},
                                  msg,
                                  {report, ["\n"], [" [",modline,":",regpid,"]"]},
                                  "\n"]
          }}
        }}
      % Print all log events to debug log
      , {handler, debug_log, logger_std_h, #{
            level          => debug
          , config         => #{
              type         => {file, "${APP_ROOT}/log/erl-debug.log"}
            , max_no_bytes => 10485760
            , max_no_files => 5
            , file_check   => 5000
          }
          , formatter => {util_log_formatter, #{
              legacy_header   => true
            , time_designator => $\s
            , single_line     => false
            , time_offset     => none
            , time_unit       => millisecond
            , template        => [time," ",
                                  {report, ['LEVEL', " [",modline,":",regpid,"]\n"], ["[",lev,"] "]},
                                  msg,
                                  {report, ["\n"], [" [",modline,":",regpid,"]"]},
                                  "\n"]
          }}
      }}
      % Print all log events to display log
      , {handler, screen_log, logger_std_h, #{
            level          => debug
          , formatter => {util_log_color_formatter, #{
              legacy_header   => false
            , time_designator => $\s
            , single_line     => false
          }}
      }}
    ]}
  ]}
].
